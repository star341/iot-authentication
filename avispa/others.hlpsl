%%% device_rs_as_app

%%% ---------------bind------------------
%%% Kbind: device<->phone(app)	Kda: device<->as	Kap: as<->phone(app)
%%% 1. device -> app: {SD}_Kbind					En(Kbind,SD)
%%% 2. app -> device: {MA.Token}_Kbind			En(Kbind,MA||Token)


%%%      ------authentication------
%%% 1. device -> AS: SD.{R4}_DS   IDA, En(DS,R4)
%%% 2. AS -> device: {R4.R5}_DS 	En(DS, R4 || R5)
%%% 3. device -> AS: SD.{R5}_DS	IDA, En(DS, R5)


 
%%% 3. device -> as: {SD.{MA.Token}_Kda}			SD,En(Kda,MA||Token)
%%% 4. app -> as: {SD.MA.token.Username.HPassword}_Kap		En(Kap,SD||MA||token||Username||HPassword)
%%% 5. as -> device: {MA.Klocal}_Kda  En(Kda,MA||Klocal) 
%%%	   as -> app: {SD.Salt}_Kap		En(Kap,SD||Salt)	


%%% ---------------same------------------
%%% 6. app -> device: MA.{R6}_Klocal   	MA,En(Klocal,R6)
%%% 7. device -> app: SD.{R6.R7}_Klocal 	SD,En(Klocal, R6 || R7)
%%% 8. app -> device: MA.{R7}_Klocal		MA,En(Klocal, R7)
%%% 9. app -> device: T1.{M1}_Kdp.{Hash(T1.{M1}_Kdp)}_Kdp		
%%%					T1,En(Kdp,M1),HMAC(Kdp,*)
%%% 10. device -> app: T2.{M2}_Kdp.{Hash(T2.{M2}_Kdp)}_Kdp		
%%%					T2,En(Kdp,M2),HMAC(Kdp,*)


%%% ---------------login------------------
%%% 11. app -> as: T3.{SD.MA.Username.HPassword}_Kap.
%%%					{Hash(T3.{SD.MA.Username.HPassword}_Kap})}_Kap		
%%%				T3,En(Kap,SD||MA||username||H(password)),HMAC(Kap,*)
%%% 12. as -> rs/app/device: 
%%%    		{SD.MA.RSid.Kdr.Krp}_Kra / {SD.RSadd.RSid.Krp}_Kap / 	
%%%    		{MA.RSadd.RSid.Kdr}_Kda				
%%%   		 En(Kra,SD||MA||RSid||Kdr||Krp) / En(Kap,SD||RSadd||RSid||Krp) 
%%%   		 / En(Kda,MA||RSadd||RSid||Kdr)
%%% 13. app -> rs: RSid.{SD.MA}_Krp 
%%% 14. device -> rs: RSid.{SD.MA}_Kdr l
%%% 15. app -> rs: T4.RSid.{M3}_Krp.{Hash(T4.RSid.{M3}_Krp)}_Krp		
%%%				T4,RSid,En(Krp,M3),HMAC(Krp,*)
%%% 16. rs -> device: T5.RSid.{M3}_Kdr.{Hash(T5.RSid.{M3}_Kdr)}_Kdr		
%%%				T5,RSid,En(Kdr,M3),HMAC(Kdr,*)
%%% 17. device -> rs: T6.RSid.{M4}_Kdr.{Hash(T6.RSid.{M4}_Kdr)}_Kdr		
%%%				T6,RSid,En(Kdr,M4),HMAC(Kdr,*)
%%% 18. rs -> app: T7.RSid.{M4}_Krp.{Hash(T7.RSid.{M4}_Krp)}_Krp		
%%%				T7,RSid,En(Krp,M4),HMAC(Krp,*)

%%% ---------------update------------------
%%% 19. app -> as: T8.{SD.MA.R8.Username.HPassword.NewUsername.NewHPassword}_Kap
%%%					.{Hash(T8.{SD.MA.R8.Username.HPassword.NewUsername.NewHPassword}_Kap)}_Kap
%%%					T8,En(Kap,SD||MA||R8||Username||HPassword||NewUsername||NewHPassword)
%%%					,HMAC(Kap,*)
%%% 20. as -> device: T9.{SD.MA.R8.Klocal.Hash(SD.MA.NewUsername.NewHPassword)}_Kda
%%% 				  .{Hash(T9.{SD.MA.R8.Klocal.Hash(SD.MA.NewUsername.NewHPassword)}_Kda)}_Kda
%%%					  T9,En(Kda,SD||MA||R8||old_klocal||temp)
%%%					  ,HMAC(Kda,*)
%%% 21. device -> as: {MA.R8}_Kda	En(Kda,MA||R8)
%%% 22. as -> app: {R8.NewSalt}_Kap			En(Kap,R8||NewSalt)


%%% ---------------recover------------------ 
%%% 23. device -> as: T10.{SD.R9}_Kda.{Hash(T10.{SD.R9}_Kda)}_Kda
%%% 					HMAC(Kda, *)
%%% 24. as -> device: {R9}_Kda	En(Kda,R9)




role device(SD,RS,AS,MA:agent,DS,Kbind:symmetric_key,Hash:hash_func,SND,RCV:channel(dy))
played_by SD
def=
	local
		State: nat,
		R4, R5, Token, R6, R7, T1, T2, M1, M2, RSadd, RSid, M3, M4, T5, T6, T9, R8, T10, R9: text,
		Klocal, Temp: hash(agent.agent.text.hash(text.hash(text))),
		Kda, Kdp: hash(text.text),
		Kdr: symmetric_key
	init
		State:=0
	transition
%%% ---------------bind------------------
		1. State=0 /\ RCV(start) =|>
		   State':=1 /\ SND({SD}_Kbind)

%%%      ------authentication------
		2. State=1 /\ RCV({MA.Token'}_Kbind) =|>
		   State':=2 /\ R4':=new() /\ SND(SD.{R4'}_DS) /\ secret(R4',sec_r4,{SD,AS}) /\ witness(SD,AS,auth_r4,R4')
					
		3. State=2 /\ RCV({R4.R5'}_DS) =|>
		   State':=3 /\ Kda':=Hash(R4.R5') /\ SND(SD.{R5'}_DS) /\ SND(SD.{MA.Token}_Kda') /\ secret(Kda',sec_kda,{SD,AS}) /\ request(SD,AS,auth_r5,R5')

%%% ---------------bind------------------
		4. State=3 /\ RCV({MA.Klocal'}_Kda) =|>
		   State':=4 

%%% ---------------same------------------
		5. State=4 /\ RCV(MA.{R6'}_Klocal) =|>
		   State':=5 /\ R7':=new() /\ Kdp':=Hash(R6.R7') /\ SND(SD.{R6'.R7'}_Klocal) /\ secret(R7',sec_r7,{SD,MA}) /\ secret(Kdp',sec_kdp,{SD,AS}) /\witness(SD,MA,auth_r7,R7')

		6. State=5 /\ RCV(MA.{R7}_Klocal) =|>
		   State':=6  /\ request(SD,MA,auth_r6,R6)

		7. State=6 /\ RCV(T1'.{M1'}_Kdp.{Hash(T1'.{M1'}_Kdp)}_Kdp) =|>
		   State':=7 /\ T2':=new() /\ M2':=new() /\ SND(T2'.{M2'}_Kdp.{Hash(T2'.{M2'}_Kdp)}_Kdp) /\ secret(M2',sec_m2,{SD,MA}) /\ request(SD,MA,auth_t1,T1') /\ witness(SD,MA,auth_t2,T2')

%%% ---------------login------------------
		8. State=7 /\ RCV({MA.RSid'.Kdr'.RSadd'}_Kda) =|>
		   State':=8 /\ SND(RSid'.{SD.MA}_Kdr)

		9. State=8 /\ RCV(T5'.RSid.{M3'}_Kdr.{Hash(T5'.RSid.{M3'}_Kdr)}_Kdr) =|>
		   State':=9 /\ T6':=new() /\ M4':=new()
					/\ SND(T6'.RSid.{M4'}_Kdr.{Hash(T6'.RSid.{M4'}_Kdr)}_Kdr)
					/\ secret(M4',sec_m4,{SD,RS,MA}) /\ request(SD,MA,auth_t5,T5') /\ witness(SD,RS,auth_t6,T6')

%%% ---------------update------------------
		10. State=9 /\RCV(T9'.{SD.MA.R8'.Klocal.Temp'}_Kda.{Hash(T9'.{SD.MA.R8'.Klocal.Temp'}_Kda)}_Kda) =|>
		   State':=10 /\ SND({MA.R8'}_Kda) /\ T10':=new() /\ R9':=new() /\ SND(T10'.{SD.R9'}_Kda.{Hash(T10'.{SD.R9'}_Kda)}_Kda) /\ witness(SD,AS,auth_r9,R9') /\ request(SD,AS,auth_t9,T9')  /\ witness(SD,AS,auth_t10,T10')

%%% ---------------recover------------------ 
		11. State=10  /\ RCV({R9'}_Kda) =|>
		   State':=11
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role authserver(AS,SD,RS,MA:agent,DS,Kap,Kra:symmetric_key,Hash:hash_func,SND,RCV:channel(dy))
played_by AS
def=
	local 
		State: nat,
		R4, R5, Username, Token, Salt, RSid, RSadd, T3, T8, R8, NewSalt, NewUsername, T9, T10, R9: text,
		Kdr, Krp: symmetric_key,
		HPassword, LoginHPassword, NewHPassword: hash(text),
		Kda: hash(text.text),
		Spd: hash(text.hash(text)),
		Klocal, Temp: hash(agent.agent.text.hash(text.hash(text)))
	init
		State:=0
	transition
%%%      ------authentication------
		1. State=0 /\ RCV(SD.{R4'}_DS) =|>
		   State':=1 /\ R5':=new() /\ Kda':=Hash(R4.R5') 
					/\ SND({R4'.R5'}_DS) /\ secret(R5',sec_r5,{AS,SD}) /\ secret(Kda',sec_kda,{SD,AS}) /\ witness(AS,SD,auth_r5,R5')

		2. State=1 /\ RCV(SD.{R5}_DS) =|>
		   State':=2  /\ request(AS,SD,auth_r4,R4)

%%% ---------------bind------------------
		3. State=2 /\ RCV(SD.{MA.Token'}_Kda) =|>
		   State':=3 

		4. State=3 /\ RCV({SD.MA.Token'.Username'.HPassword'}_Kap) =|>
		   State':=4 /\ Salt':=new() /\ Spd':=Hash(Salt'.HPassword')
					/\ Klocal':=Hash(SD.MA.Username.Spd')
					/\ SND({MA.Klocal'}_Kda)
					/\ SND({SD.Salt'}_Kap)
					/\ secret(Klocal', sec_klocal,{SD,MA,AS})
					/\ request(AS,MA,app_as_token,Token')

%%% ---------------login------------------
		5. State=4 /\ RCV(T3'.{SD.MA.Username.LoginHPassword'}_Kap.{Hash(T3'.{SD.MA.Username.LoginHPassword'}_Kap)}_Kap)
					/\ Spd=Hash(Salt.LoginHPassword') =|>
		   State':=5 /\ RSid':=new() /\ Kdr':=new() /\ Krp':=new() /\ RSadd':=new()
					/\ SND({SD.MA.RSid'.Kdr.Krp}_Kra)
					/\ SND({MA.RSid'.Kdr.RSadd'}_Kda)
					/\ SND({SD.RSid'.Krp.RSadd'}_Kap)
					/\ secret(Kdr',sec_kdr,{AS,SD,RS})
					/\ secret(Krp',sec_krp,{AS,RS,MA})
 					/\ request(AS,MA,auth_t3,T3')

%%% ---------------update------------------
		6. State=5 /\ RCV(T8'.{SD.MA.R8'.Username.LoginHPassword'.NewUsername'.NewHPassword'}_Kap.{Hash(T8'.{SD.MA.R8'.Username.LoginHPassword'.NewUsername'.NewHPassword'}_Kap)}_Kap) 
					/\ Spd=Hash(Salt.LoginHPassword')=|>
		   State':=6 /\ NewSalt':=new() 
					/\ T9':=new() /\ Temp':=Hash(SD.MA.NewUsername'.Hash(NewSalt'.NewHPassword'))
					/\ SND(T9'.{SD.MA.R8'.Klocal.Temp'}_Kda.{Hash(T9'.{SD.MA.R8'.Klocal.Temp'}_Kda)}_Kda) /\ secret(Temp',sec_temp,{SD.AS.MA})
					 /\ request(AS,MA,auth_t8,T8') /\ witness(AS,SD,auth_t9,T9')

		7. State=6 /\ RCV({MA.R8}_Kda) =|>
		   State':=7 /\ Username':=NewUsername /\ HPassword':=NewHPassword 
					/\ Spd':=Hash(Salt.HPassword')/\ SND({R8.NewSalt}_Kap) /\ request(AS,MA,auth_r8,R8)

%%% ---------------recover------------------ 		
		8. State=7 /\ RCV(T10'.{SD.R9'}_Kda.{Hash(T10'.{SD.R9'}_Kda)}_Kda)=|>
		   State':=8 /\ SND({R9'}_Kda) /\ request(AS,SD,auth_r9,R9')  /\ request(AS,SD,auth_t10,T10')


end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role app(MA,SD,RS,AS:agent,Kbind,Kap:symmetric_key,Hash:hash_func,SND,RCV:channel(dy))
played_by MA
def=
	local 
		State: nat,
		Username, Password, Token, R6, R7, T1, T2, M1, M2, RSadd, RSid, M3, M4, 
		Salt, T3, T4, T7, T8, NewUsername, NewPassword, R8, NewSalt: text,
		Krp: symmetric_key,
		Kdp: hash(text.text),
		HPassword, NewHPassword: hash(text),
		Klocal: hash(agent.agent.text.hash(text.hash(text)))
	init
		State:=0
	transition
%%% ---------------bind------------------
		1. State=0 /\ RCV({SD}_Kbind) =|>
		   State':=1 /\ Token':=new() /\ SND({MA.Token'}_Kbind)
					 /\ Username':=new() /\ Password':=new() /\ HPassword':=Hash(Password')
					 /\ SND({SD.MA.Token'.Username'.HPassword'}_Kap) 
					/\ secret(Username',sec_unj,{MA,AS}) /\ secret(HPassword',sec_hpwj,{MA,AS})
					/\ witness(MA,AS,app_as_token,Token')

%%% ---------------same------------------
		2. State=1 /\ RCV({SD.Salt'}_Kap) =|>
		   State':=2 /\ R6':=new() /\ Klocal':=Hash(SD.MA.Username.Hash(Salt'.Hash(Password))) /\ SND(MA.{R6'}_Klocal')
					 /\ secret(R6',sec_r6,{MA,SD}) /\ witness(MA,SD,auth_r6,R6')

		3. State=2 /\ RCV(SD.{R6.R7'}_Klocal) =|>
		   State':=3 /\ Kdp':=Hash(R6.R7') /\ SND(MA.{R7'}_Klocal) /\ secret(Kdp',sec_kdp,{SD,AS})
					 /\ request(MA,SD,auth_r7,R7') /\ T1':=new() /\ M1':=new() /\ SND(T1'.{M1'}_Kdp'.{Hash(T1'.{M1'}_Kdp')}_Kdp') 
					/\ secret(M1',sec_m1,{SD,MA}) /\ witness(MA,SD,auth_t1,T1')

%%% ---------------login------------------
		4. State=3 /\ RCV(T2'.{M2'}_Kdp.{Hash(T2'.{M2'}_Kdp)}_Kdp) =|>
		   State':=4/\ T3':=new() /\ SND(T3'.{SD.MA.Username.HPassword}_Kap
					.{Hash(T3'.{SD.MA.Username.HPassword}_Kap)}_Kap) 
					/\ request(MA,SD,auth_t2,T2') /\ witness(MA,AS,auth_t3,T3')

		5. State=4 /\ RCV({SD.RSid'.Krp'.RSadd'}_Kap) =|>
		   State':=5 /\ SND(RSid'.{SD.MA}_Krp)
					/\ T4':=new() /\ M3':=new()
					/\ SND(T4'.RSid'.{M3'}_Krp.{Hash(T4'.RSid'.{M3'}_Krp)}_Krp)
					/\ secret(M3',sec_m3,{MA,RS,SD})  /\ witness(MA,RS,auth_t4,T4')

%%% ---------------update------------------
		6. State=5 /\ RCV(T7'.RSid.{M4'}_Krp.{Hash(T7'.RSid.{M4'}_Krp)}_Krp) =|>
		   State':=6 	/\ request(MA,RS,auth_t7,T7')
						/\ T8':=new() /\ NewUsername':=new() /\ NewPassword':=new() /\ R8':=new()
						/\ NewHPassword':=Hash(NewPassword')
						/\SND(T8'.{SD.MA.R8'.Username.HPassword.NewUsername'.NewHPassword'}_Kap
						.{Hash(T8.{SD.MA.R8'.Username.HPassword.NewUsername'.NewHPassword'}_Kap)}_Kap) 
						/\ secret(NewUsername',sec_new_unj,{MA,SD,AS}) 
						/\ secret(NewHPassword',sec_new_hpwj,{MA,AS})
						/\ witness(MA,AS,auth_r8,R8') /\ witness(MA,AS,auth_t8,T8')

		7. State=6 /\ RCV({R8.NewSalt'}_Kap) =|>
		   State':=7  

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role relaycommandserver(RS,SD,AS,MA:agent,Kra:symmetric_key,Hash:hash_func,SND,RCV:channel(dy))
played_by RS
def=
	local
		State: nat,
		RSid, M3, M4, T4, T5, T6, T7: text,
		Kdr, Krp: symmetric_key
	init
		State:=0
	transition
%%% ---------------login------------------
		1. State=0 /\ RCV({SD.MA.RSid'.Kdr'.Krp'}_Kra) =|>
		   State':=1

		2. State=1 /\ RCV(RSid'.{SD.MA}_Krp) =|>
		   State':=2

		3. State=2 /\ RCV(RSid'.{SD.MA}_Kdr) =|>
		   State':=3

		4. State=3 /\ RCV(T4'.RSid.{M3'}_Krp.{Hash(T4'.RSid.{M3'}_Krp)}_Krp) =|>
		   State':=4 /\ T5':=new() /\ SND(T5'.RSid.{M3'}_Kdr.{Hash(T5'.RSid.{M3'}_Kdr)}_Kdr) /\ request(RS,MA,auth_t4,T4') /\ witness(RS,SD,auth_t5,T5')

		5. State=4 /\ RCV(T6'.RSid.{M4'}_Kdr.{Hash(T6'.RSid.{M4'}_Kdr)}_Kdr) =|>
		   State':=5 /\ T7':=new() /\ SND(T7'.RSid.{M4'}_Krp.{Hash(T7'.RSid.{M4'}_Krp)}_Krp) /\ request(RS,SD,auth_t6,T6') /\ witness(RS,SD,auth_t7,T7')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(SD,RS,AS,MA:agent,DS,Kbind,Kap,Kra:symmetric_key,Hash:hash_func)
def=
	local
        SND4,RCV4,SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
    composition
        device(SD,RS,AS,MA,DS,Kbind,Hash,SND1,RCV1) /\
		relaycommandserver(RS,SD,AS,MA,Kra,Hash,SND4,RCV4) /\
        authserver(AS,SD,RS,MA,DS,Kap,Kra,Hash,SND2,RCV2) /\
		app(MA,SD,RS,AS,Kbind,Kap,Hash,SND3,RCV3)
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment()
def=
    const
        sd1,sd2,rs,as,ma1,ma2:agent,
        ds1,ds2,kbind1,kap1,kbind2,kap2,kra,kia,kbindi,dsi:symmetric_key,
		myhash:hash_func,
		sec_r4,sec_r5,sec_kda,sec_unj,sec_hpwj,sec_klocal,sec_r6,sec_r7,
		sec_kdp,sec_m1,sec_m2,sec_kdr,sec_krp,sec_m3,sec_m4,app_as_token,
		sec_new_unj,sec_new_hpwj,sec_temp,
		auth_t1,auth_t2,auth_t3,auth_t4,auth_t5,auth_t6,auth_t7,auth_t8,auth_t9,auth_t10,
		auth_r4,auth_r5,auth_r6,auth_r7,auth_r8,auth_r9:protocol_id

    intruder_knowledge = {sd1, ma1, sd2, ma2, as, rs, myhash, kbindi, kia, dsi}
    composition
        session(sd1,rs,as,ma1,ds1,kbind1,kap1,kra,myhash)
        %/\session(sd1,rs,as,ma1,ds1,kbind1,kap1,kra,myhash)
        %/\ session(sd2,rs,as,ma2,ds1,kbind2,kap2,kra,myhash)
        %/\ session(sd1,rs,as,i,ds1,kbindi,kia,kra,myhash)
        %/\ session(i,rs,as,ma1,dsi,kbindi,kap1,kra,myhash)
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal
    secrecy_of sec_r4,sec_r5,sec_kda,sec_unj,sec_hpwj,sec_klocal,sec_r6,sec_r7,
				sec_kdp,sec_m1,sec_m2,sec_kdr,sec_krp,sec_m3,sec_m4,sec_new_unj,sec_new_hpwj,sec_temp
    authentication_on app_as_token,auth_r4,auth_r5,auth_r6,auth_r7,auth_r8,auth_r9,
						auth_t1,auth_t2,auth_t3,auth_t4,auth_t5,auth_t6,auth_t7,auth_t8,auth_t9,auth_t10
end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()

